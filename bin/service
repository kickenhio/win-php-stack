#!/bin/bash
SERVICE="$1"
COMMAND="$2"
NGINXPATH="$(dirname "$0")"
NGINXPATH=${NGINXPATH%\/bin*}
PHPVERSION="7.4.2"

function processing() {
    COUNT=$(tasklist | findstr "$1" | wc -l)
    echo $COUNT
}

if [ ! -f "$NGINXPATH/conf/upstreams.conf" ]; then
    echo -e "\e[1;33mMissing \e[1;31mupstreams.conf\e[1;33m file. Copying...\e[0m"
    "$NGINXPATH/services/nginx/upstream.exe" "${NGINXPATH}/upstreams.conf" "${NGINXPATH}/conf/upstreams.conf"
    echo -e "\e[1;32mDone.\e[0m"
fi

if [ ! -f "$NGINXPATH/conf/nginx.conf" ]; then
    echo -e "\e[1;33mMissing \e[1;31mnginx.conf\e[1;33m file. Copying...\e[0m"
    
    WINPATH=$(cygpath -w "$NGINXPATH")
    TEST=$(echo "${WINPATH}" | sed 's;\\;\\/;g')
    REPLACE='s/'"\$ROOTDIR"'/'"${TEST}"'/g'
    sed "$REPLACE" "${NGINXPATH}/services/nginx/nginx.conf" > "${NGINXPATH}/conf/nginx.conf"

    echo -e "\e[1;32mDone.\e[0m"
fi

if [ $SERVICE ] && [ $SERVICE == 'nginx' ]; then
    if [ $COMMAND ]; then
        cd "$NGINXPATH"
        PS=$(processing nginx)
        
        if [ $COMMAND == 'start' ]; then
            if [ $PS == "0" ]; then
                start nginx
                echo -e "\e[1;34mnginx service started\e[0m"
            else
                echo -e "\e[1;30mnginx service is already up\e[0m"
            fi
        elif [ $COMMAND == 'stop' ]; then
            if [ $PS == "0" ]; then
                echo -e "\e[1;30mnginx service cant be stopped as its not running :)\e[0m"
            else
                ./nginx.exe -s $COMMAND
                echo -e "\e[1;31mnginx service stopped\e[0m"
            fi
        elif [ $COMMAND == 'restart' ]; then
            service nginx reload
        elif [ $COMMAND == 'reload' ]; then
            if [ $PS == "0" ]; then
                echo -e "\e[1;30mnginx service cant be reload as its not running :)\e[0m"
            else
                ./nginx.exe -s $COMMAND
                echo -e "\e[1;34mnginx service is reloading\e[0m"
            fi
        else
            echo -e "\e[1;30mnginx service cant recognize \e[1;31m$COMMAND\e[1;30m command\e[0m"
        fi
    else
        echo -e "\e[1;33mnginx service will make your wish come true, but type it first\e[0m"
    fi
fi

if [ $SERVICE ] && [ $SERVICE == 'redis' ]; then
    BDS=$(processing biedis)
    if [ $COMMAND == 'start' ]; then
        if [ $BDS == "0" ]; then
            start //B "" biedis
            echo -e "\e[1;34mbiedis service started\e[0m"
        else
            echo -e "\e[1;30mbiedis service is already up\e[0m"
        fi
    elif [ $COMMAND == 'restart' ]; then
        service redis stop
        service redis start
    elif [ $COMMAND == 'stop' ]; then
        if [ $BDS == "0" ]; then
            echo -e "\e[1;30mbiedis service cant be reload as its not running :)\e[0m"
        else
            taskkill //IM "biedis.exe" //F
            echo -e "\e[1;31mbiedis service stopped\e[0m"
        fi
    fi
fi

if [ $SERVICE ] && [ $SERVICE == 'fpm' ]; then
    BDS=$(processing fpm)
    
    if [ $COMMAND == 'start' ]; then
        if [ $BDS == "0" ]; then
            cd "$NGINXPATH/services/fpm"
            start //B "" fpm "$NGINXPATH/php" "$NGINXPATH/upstreams.conf"
            echo -e "\e[1;34mFPM service started\e[0m"
        else
            echo -e "\e[1;30mFPM service is already up\e[0m"
        fi
    elif [ $COMMAND == 'restart' ]; then
        service fpm stop
        service fpm start
    elif [ $COMMAND == 'stop' ]; then
        if [ $BDS == "0" ]; then
            echo -e "\e[1;30mFPM service cant be reload as its not running :)\e[0m"
        else
            taskkill //IM "fpm.exe" //F
            echo -e "\e[1;31mFPM service stopped\e[0m"
        fi

        CGI=$(processing php-cgi)
        if [ $CGI == "0" ]; then
            echo -e "\e[1;30mNo CGI processes to kill :)\e[0m"
        else
            taskkill //IM "php-cgi.exe" //F
            echo -e "\e[1;31mAll child CGI processes have stopped\e[0m"
        fi
    fi
fi